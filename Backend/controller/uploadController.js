const multer = require("multer");
const shortId = require("shortid");
const Image = require("../models/Image");
const path = require("path");

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    const uploadDir = path.resolve(__dirname, "../public/uploads"); // Resolve the path relative to the current script file
    cb(null, uploadDir);
  },
  filename: function (req, file, cb) {
    cb(null, shortId() + file.originalname);
  },
});

const upload = multer({
  storage: storage,
}).single("image");

exports.UploadLogo = async (req, res) => {
  upload(req, res, async function (err) {
    if (err instanceof multer.MulterError) {
      // A Multer error occurred when uploading.
      console.log(err);
      return res.status(400).json({ error: "File upload error" });
    } else if (err) {
      // An unknown error occurred when uploading.
      console.log(err);
      return res.status(500).json({ error: "Internal server error" });
    }
    // Everything went fine.
    // You can now use req.file to access information about the uploaded file.
    // For example, req.file.filename gives the unique filename generated by multer.
    const imagename = req.file.filename;
    try {
      await Image.create({
        imagename,
        direction: `/uploads/${imagename}`,
      });
      return res.status(200).json({
        message: "File uploaded successfully",
        filename: req.file.filename,
      });
    } catch (err) {
      console.log(err);
      return res.status(500).json({ error: "Internal server error" });
    }
  });
};

exports.getImages = async (req, res) => {
  try {
    const images = await Image.find();
    res.status(200).json(images);
  } catch (err) {
    console.log(err);
    res.status(500).json({ error: "Internal server error" }); // Sending an error response if an error occurs
  }
};
